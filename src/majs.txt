absmach.c:    /* MAJ: The following code is used in finding unfreed blocks
absmach.c:  /* MAJ: the following code is used in finding unfreed blocks
absmach.c:      exit(1);  /* MAJ:  exit here is for debugging */
absmach.c:  /* temp debug stuff MAJ, leave to be set as needed.
absmach.c:  /* MAJ: the refcnt test is already true if freeit has been called
absmach.c:     * used because of a user interrupt. MAJ: We may not need this if we
absmach.c:    /* fill boolean arrays with 0 to allow word-by-word & and | . MAJ: This
absmach.c:        /*  exit(1); MAJ: put this in if you nneed to stop for debugging */
absmach.h:/* MAJ Dec 2014: Considered defining nialvalence based on precision and
absmach.h: The definitions failed to compile and MAJ abandoned this change.
arith.c:/* MAJ Dec 2014: I have added routines to do integer operations with overflow testing.
arith.c:/* MAJ Dec 2014:
arith.c:                /* MAJ: this should use a smart powering algorithm.
arith.c:/* MAJ Dec 2014: I have eliminated the use of "entier" in the code for quotient and mod since it forces the use of "doubles"
atops.c:    nialint         i;  /* MAJ Dec 2014: changed from int. Needed  for INTS64 since tally is a nialint */
atops.c:                k;  /* MAJ Dec 2014: k is used in looping on an array and has to be be nialint */
atops.c: MAJ: this should be retested for the 64 bit version.
atops.c:          nialint     itema = fetch_int(a, i),   /* MAJ Dec 2014: This was declared int by mistake */
atops.c:  vextent[0] = (nialint)v; /* MAJ Dec 2014: needed to pass *nialint type to new_create_array below */
blders.c:          /* MAJ Dec 2014: added 64 bit case below */
compare.c:               /* MAJ: use binary case for consistency */
compare.c:         /* MAJ: use binary case for consistency */
diag.c:/* MAJ: This file contains old debugging code that executes at the Nial level.
eval.c:                                     MAJ: Does this change the semantics? */
eval.c:   MAJ: Ideally this function should be testing that the argument is legitimate.
eval.h:/* MAJ switch the define with the undef below to see debug flags
fileio.c:    /* MAJ: did not remove the cases that are for WINDOWS yet. Will return to this later. */
insel.c:/* MAJ:  This test is not needed since z is created as the same type as a.
lib_main.h:/* MAJ: after design of v7.0 is finalized remove unused items in these structs. */
main_stu.c:/* MAJ: globals move to libmain if needed */
main_stu.c:/* MAJ: decide if we want CMDLINE and if so move its code to unixif.c */
main_stu.c:/* MAJ: move this to unixif.h */
main_stu.c:    /* MAJ: consider having an -i flag to indicate interactive use.
main_stu.c:  quiet = false;  /* MAJ: change this to true when done debugging */
main_stu.c:  /* MAJ: This is a variable used during debugging of the interpreter.
main_stu.c:    /* MAJ: remove the following statement when done debugging */
main_stu.c:              exit(error_rc); /* MAJ: decide on exit code */
main_stu.c:              /* MAJ: remove the following statement when done debugging */
main_stu.c:              exit(error_rc);  /* MAJ: decide on exit code */
main_stu.c:            exit(1);   /* MAJ: decide on exit code */
main_stu.c:            exit(error_rc);  /* MAJ: decide on exit code */
main_stu.c:    /* MAJ: check if we need the next two lines */
nstreams.c:/* TIMELIB  MAJ moved this here */
picture.c:/* MAJ Dec 2014: NDINT is used in reserving space to convert integers to strings. */
picture.c:/* MAJ: NDREAL is used in reserving space to convert doubles to strings.
systemops.c:    /* MAJ: check if we need the next two lines */
unixif.c:/* MAJ: the openfile code is more general than needed for UNIX versions.
unixif.h:/* MAJ: try omitting these
utils.c:/* MAJ doubts the following statement was true in V4 implementations:
wsmanage.c:   /* MAJ: temporary code for debugging when startup fails
