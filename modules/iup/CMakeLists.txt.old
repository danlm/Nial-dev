
# A generic cmake for building Q'Nial versions for Linux and Mac OSX. 
# Both 32 and 64 bit versions on Intel processors.
#

cmake_minimum_required (VERSION 2.6)
project(Nial)

include_directories("${PROJECT_BINARY_DIR}")


#--------------------  Build Options -------------------------

option(USE_INTS32 "Build a 32 bit system" OFF)
option(USE_INTS64 "Build a 64 bit system" ON)
option(USE_FASTMATH "Utilise compiler options to speed up maths" ON)  

# Include package flags 
include("NialPackages.txt" OPTIONAL)


set (OPTFLAGS "-O2")
if (USE_FASTMATH)
  set (OPTFLAGS "${OPTFLAGS} -ffast-math")
endif (USE_FASTMATH)


# ------------------- System Specific -----------------------

set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OPTFLAGS}")

# Linux specific settings
if (${CMAKE_SYSTEM_NAME} MATCHES "Linux")
  set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DLINUX -DUNIXSYS")
endif (${CMAKE_SYSTEM_NAME} MATCHES "Linux")

# OSX specific flags
if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
  set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DOSX -DOSX_INTEL -DUNIXSYS")
endif (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")




# -------------------- Standard sources ---------------------

# Source files for Nial
# Note that these are also influenced by the switches file generated when
# the package builder is run.
set (NIAL_SRCS absmach.c
          arith.c 
          atops.c 
	  basics.c 
          blders.c
          compare.c
          diag.c
          eval.c
          insel.c
          lib_main.c
          linalg.c
          logicops.c
          main_stu.c
          parse.c
          picture.c
          profile.c
          scan.c
          symtab.c
          systemops.c
          trig.c
          trs.c
          userops.c
          unixif.c
          utils.c
          wsmanage.c
          posix_regex.c
          ndynload.c
          ntable.c
          sprocess.c
          memspaces.c
          nstreams.c
	  catch_throw.c
          sorts.c
          fileio.c
          sockets.c
	  nopengl.c nopengl_supp.c)


if (NIAL_PKG_N_OPENCL)
  set(NIAL_SRCS ${NIAL_SRCS} nopencl.c)
endif (NIAL_PKG_N_OPENCL)

# ---------------- Standard Libraries --------------------

# Always present on a build
set (NIAL_LIBS m readline util GL glut GLU)


# ---------------- Extension Options ---------------------

# Compilation options for 32 bit system
if (USE_INTS32)
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DINTS32")
endif (USE_INTS32)

# Compilation options for 64 bit system
if (USE_INTS64)
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DINTS64")
endif (USE_INTS64)

# Dynamic loading
if (NIAL_PKG_NDYNLOAD)
  set (NIAL_LIBS ${NIAL_LIBS} dl)
endif (NIAL_PKG_NDYNLOAD)

# Libraries and compilation options for OpenCL
if (NIAL_PKG_N_OPENCL)
  if (${CMAKE_SYSTEM_NAME} MATCHES "Linux")
    set (NIAL_LIBS ${NIAL_LIBS} OpenCL)
  endif (${CMAKE_SYSTEM_NAME} MATCHES "Linux")
  if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
    set (NIAL_LIBS "${NIAL_LIBS} -framework OpenCL")
  endif (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
endif (NIAL_PKG_N_OPENCL)

# ---------------- Core Executable -------------------------


add_executable(Nial ${NIAL_SRCS})
target_link_libraries(Nial ${NIAL_LIBS})



