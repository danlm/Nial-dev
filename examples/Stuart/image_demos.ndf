# BINARY IMAGE PROCESSING
#
# These demos illustrate the use of Nial for processing binary images. These demos
# create grayscale and color image files, which can be viewed with any
# image-viewing application capable of displaying .pbm, .pgm, and .ppm files.
#
# demo1 and demo2 show the usage of a variety of operations.
#
# Examples:
#          demo1 "apple.pbm
#          demo2 "bat.pbm
#
# The supplied test images are: apple.pbm, bat.pbm, rat.pbm, frog.pbm, and camel.pbm.
#
# demo3 and demo4 show how connected components can be found in a binary image.
# The supplied test cases are objects.pbm and crosses.pbm, which are standard images
# for testing connected components algorithms.
# 
# Examples:
#          demo3 "crosses.pbm
#          demo3 "objects.pbm
#   
# demo4 creates its own test image.
#
#          demo4 usage: demo4 n k
#
# where n is the length of the side of the test image and k is the (approximate) number
# of individual objects in the image. Best results are obtained if k<0.25*n.
#
# The "bw" ops require binary images that are square and have sides whose length
# is a power of 2. The op "bwprep" below can be used to modify a binary image so
# that it meets these requirements. The supplied test images have already been prepped.


loaddefs "display


loaddefs "image


# DEMOS


# demo1 usage: demo1 "filename
 
demo1 is op Filename {
   x1 := readpbm Filename ;
   write 'The original image' ;
   writepbm x1 "ORIGINAL.pbm ;
   write 'Fundamental image processing operations:' ;
   x2 := bwperim x1 ;
   write '   Extracting the perimeter of the image' ;
   writepbm x2 "PERIMETER.pbm ;
   x3 := bwdilate x2 ;
   write '   Dilating (thickening) the outline' ;
   writepbm x3 "DILATED.pbm ;
   x4 := bwerode x3 ;
   write '   Eroding (thinning) the thickened outline' ;
   writepbm x4 "ERODED.pbm ;
}


# demo2 usage: demo2 "filename

demo2 is op Filename {
   x1 := readpbm Filename ;
   write 'The original image' ;
   writepbm x1 "ORIGINAL.pbm ;
   write 'Some additional image processing operations' ;
   x2 := bwperim x1 ;
   write '   Extracting the perimeter of the image' ;
   writepbm x2 "PERIMETER.pbm ;
   x3 := bwdilate x2 ;
   write '   Dilating (thickening) the outline' ;
   writepbm x3 "DILATED.pbm ;
   r c := shape x1 ;
   x4 := x3 xor randm r c 0.15 ;
   write '   Adding 15% noise to the image' ;
   writepbm x4 "NOISY.pbm ;
   write '   "Shrinking" the image 3x to reduce noise' ;
   x5 := shrink x4 3 ;
   writepbm x5 "SHRUNKx3.pbm ;
   write '   Close up the contour' ;
   x6 := bwclose x5 ;
   writepbm x6 "CLOSED.pbm ;
   write '   Apply uniform convolution' ;
   x7 := uniconv x6 4 ;
   writepbm x7 "UNICONV.pbm ;
   write '   Erode the image' ;
   x8 := bwerode x7 ;
   writepbm x8 "ERODED.pbm ; 
}


demo3 is op Filename {
   m := readpbm Filename ;
   z := concom m ;
   write 'The original image' ;
   writepbm m "ORIGINAL.pbm ;
   write 'Display connected components in grayscale representation' ;
   writepgm z "GRAYSCALE.pgm ;
   write 'Display connected components in "hot iron" color representation' ;
   hotiron z "HOT_IRON.ppm ;
   write 'Display connected components in pseudocolor representation' ;
   pseudocolor z "PSEUDOCOLOR.ppm ;
}


demo4 is op n k {
   m := cctest n k ;
   z := concom m ;
   write 'The original image' ;
   writepbm (not m) "ORIGINAL.pbm ;
   write 'Display connected components in grayscale representation' ;
   writepgm z "GRAYSCALE.pgm ;
   write 'Display connected components in "hot iron" color representation' ;
   hotiron z "HOT_IRON.ppm ;
   write 'Display connected components in pseudocolor representation' ;
   pseudocolor z "PSEUDOCOLOR.ppm ;
}




   